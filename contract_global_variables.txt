// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.6.0 <0.9.0;

contract Betting {
    address payable public owner;
    mapping(address => uint256) private bets;

    event BetPlaced(address bettor, uint256 amount);

    constructor() {
        owner = payable(msg.sender);
    }

    function placeBet() public payable {
        require(msg.value > 0, "You must send some ether to place a bet.");

        bets[msg.sender] += msg.value;

        emit BetPlaced(msg.sender, msg.value);
    }

    function claimWinnings() public {
        require(msg.sender == owner, "Only the owner can claim winnings.");
        owner.transfer(address(this).balance);
    }

    function getOwnerBalance() public view returns (uint256) {
        require(msg.sender == owner, "Only the owner can see their balance.");
        return owner.balance;
    }
}
